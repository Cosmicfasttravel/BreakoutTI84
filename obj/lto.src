	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z12random_colorv
__Z12random_colorv:
	call	_random
	ld	bc, 3
	call	__iand
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	hl, _switch.table._Z12random_colorv
	add	hl, de
	ld	hl, (hl)
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z24generate_connected_levelv
__Z24generate_connected_levelv:
	ld	hl, -351
	call	__frameset
	ld	bc, -330
	lea	iy, ix
	add	iy, bc
	ld	de, _boxes
	ld	hl, 3200
	ld	bc, 0
	ld	(ix - 3), de
	push	ix
	ld	de, -351
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	ld	de, -336
	add	ix, de
	ld	(ix), iy
	pop	ix
	lea	bc, iy
	ld	de, -342
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	de, -16
BB1_1:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_3
	ld	(iy + 15), 0
	lea	iy, iy + 16
	add	hl, de
	jr	BB1_1
BB1_3:
	call	_random
	ld	bc, 50
	call	__iremu
	ld	de, 20
	add	hl, de
	ld	de, -345
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_random
	ld	de, 10
	push	de
	pop	bc
	call	__iremu
	push	hl
	pop	iy
	ld	hl, 5
	ex	de, hl
	add	iy, de
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	call	_random
	ld	bc, 10
	call	__iremu
	ld	de, -348
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	push	hl
	pop	iy
	ld	de, 5
	add	iy, de
	ld	de, -339
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -336
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	(iy), b
	ld	de, -342
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	lea	hl, iy
	inc	hl
	ld	bc, 323
	ex	de, hl
	lea	hl, iy
	ldir
	ld	bc, 18
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	call	__imulu
	push	ix
	ld	de, -345
	add	ix, de
	ld	bc, (ix)
	pop	ix
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -348
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	iy, de
	ld	(iy + 5), 1
	ld	bc, -339
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	hl, 1
BB1_4:
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	ld	de, -348
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jp	z, BB1_11
BB1_5:
	ld	bc, -336
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
BB1_6:
	call	_random
	ld	bc, 6
	call	__iremu
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, ___const._Z24generate_connected_levelv.dirY
	add	hl, de
	ld	iy, (hl)
	ld	(ix - 3), de
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	add	iy, bc
	ld	hl, ___const._Z24generate_connected_levelv.dirX
	ld	de, (ix - 3)
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	bc, -336
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	hl, de
	push	hl
	pop	bc
	ld	de, -339
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	lea	hl, iy
	ld	de, 18
	or	a, a
	sbc	hl, de
	jr	nc, BB1_6
	push	bc
	pop	de
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB1_6
	push	de
	pop	hl
	ld	bc, 18
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB1_6
	ld	bc, -339
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy
	ld	bc, 18
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	ix
	ld	de, -342
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add	hl, bc
	ld	de, (ix - 3)
	add	hl, de
	bit	0, (hl)
	push	ix
	ld	bc, -333
	push	af
	add	ix, bc
	pop	af
	ld	(ix), iy
	pop	ix
	ld	(ix - 3), de
	push	ix
	ld	de, -345
	push	af
	add	ix, de
	pop	af
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jp	nz, BB1_5
	ld	(hl), 1
	ld	(ix - 3), bc
	ld	bc, -348
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	push	ix
	ld	bc, -333
	add	ix, bc
	ld	(ix), iy
	pop	ix
	jp	BB1_4
BB1_11:
	ld	a, 4
	or	a, a
	sbc	hl, hl
	ld	bc, -333
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
BB1_12:
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	or	a, a
	sbc	hl, bc
	jp	z, BB1_20
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 10
	call	__imulu
	ld	de, -348
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, 30
	ld	(ix - 3), bc
	push	ix
	ld	bc, -342
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	ix
	ld	bc, -336
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
BB1_14:
	push	hl
	pop	de
	ld	bc, 300
	or	a, a
	sbc	hl, bc
	jp	z, BB1_19
	ld	bc, -336
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	bit	0, (hl)
	ld	bc, -345
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	(hl), de
	jr	nz, BB1_17
	ld	de, 15
	jp	BB1_18
BB1_17:
	ld	bc, -351
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	c, a
	call	__ishl
	push	hl
	pop	bc
	ld	hl, _boxes
	add	hl, bc
	ld	bc, -339
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), de
	ld	bc, -348
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -339
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	ld	(iy + 3), hl
	ld	hl, 15
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 6), hl
	ld	hl, 10
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 9), hl
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 15), 1
	call	__Z12random_colorv
	ld	a, 4
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, -339
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 12), de
	ld	de, 15
	ld	bc, -351
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	inc	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB1_18:
	ld	bc, -336
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -345
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	jp	BB1_14
BB1_19:
	ld	bc, -333
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -342
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	iy, iy + 18
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	jp	BB1_12
BB1_20:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10spawn_balliiii
__Z10spawn_balliiii:
	call	__frameset0
	ld	a, (ix + 9)
	ld	iy, _balls
	ld	de, 0
BB2_1:
	ld	bc, 60
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	z, BB2_5
	lea	bc, iy
	add	iy, de
	bit	0, (iy + 10)
	jr	z, BB2_4
	ex	de, hl
	ld	de, 12
	add	hl, de
	ex	de, hl
	push	bc
	pop	iy
	jr	BB2_1
BB2_4:
	push	bc
	pop	iy
	add	iy, de
	ld	hl, (ix + 6)
	ld	(iy), l
	ld	(iy + 1), h
	ld	(iy + 2), a
	ld	(iy + 3), 3
	ld	hl, (ix + 12)
	ld	(iy + 4), hl
	ld	hl, (ix + 15)
	ld	(iy + 7), hl
	ld	(iy + 10), 1
BB2_5:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9spawn_boxiiii
__Z9spawn_boxiiii:
	ld	hl, -3
	call	__frameset
	ld	iy, _boxes
	ld	bc, 0
BB3_1:
	ld	de, 3200
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	z, BB3_5
	add	iy, bc
	bit	0, (iy + 15)
	jr	z, BB3_4
	push	bc
	pop	hl
	ld	bc, 16
	add	hl, bc
	push	hl
	pop	bc
	ld	iy, _boxes
	jr	BB3_1
BB3_4:
	ld	hl, _boxes
	push	hl
	pop	iy
	add	iy, bc
	ld	(ix - 3), iy
	ld	hl, (ix + 6)
	ld	(iy), hl
	ld	hl, (ix + 9)
	ld	(iy + 3), hl
	ld	hl, (ix + 12)
	ld	(iy + 6), hl
	ld	hl, (ix + 15)
	ld	(iy + 9), hl
	call	__Z12random_colorv
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	iy, (ix - 3)
	ld	(iy + 12), de
	ld	(iy + 15), 1
BB3_5:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8draw_boxv
__Z8draw_boxv:
	ld	hl, -6
	call	__frameset
	ld	bc, 16
	ld	iy, 0
BB4_1:
	ld	de, 3200
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB4_5
	ld	(ix - 3), iy
	lea	de, iy
	ld	iy, _boxes
	add	iy, de
	bit	0, (iy + 15)
	jr	z, BB4_4
	ld	de, (ix - 3)
	ld	hl, _boxes
	push	hl
	pop	iy
	add	iy, de
	ld	(ix - 6), iy
	ld	l, (iy + 12)
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix - 6)
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	de, (iy + 6)
	ld	c, (iy + 9)
	push	bc
	push	de
	ld	e, a
	push	de
	push	hl
	call	_gfx_FillRectangle_NoClip
	ld	bc, 16
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB4_4:
	ld	iy, (ix - 3)
	add	iy, bc
	jr	BB4_1
BB4_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11update_ballP4ball
__Z11update_ballP4ball:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	bit	0, (iy + 10)
	jp	z, BB5_10
	ld	de, (iy + 4)
	lea	bc, iy
	push	bc
	pop	hl
	ld	iy, (hl)
	ld	(ix - 3), de
	add.sis	iy, de
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
	lea	de, iy
	push	bc
	pop	iy
	ld	hl, (iy + 7)
	ld	a, (iy + 2)
	ld	(ix - 9), hl
	add	a, l
	ld	(iy + 2), a
	ld	c, (iy + 3)
	ld	b, 0
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jr	nc, BB5_3
	ld	iy, (ix + 6)
	ld	(iy), c
	ld	(iy + 1), b
	ld	hl, (ix - 3)
	call	__ineg
	ld	(ix - 3), hl
	ld	(iy + 4), hl
	ld	(iy + 11), 0
	ld	e, c
	ld	d, b
BB5_3:
	ld	iy, 0
	lea	hl, iy
	ld	l, e
	ld	h, d
	lea	de, iy
	ld	e, c
	ld	(ix - 6), de
	add	hl, de
	ld	de, 320
	or	a, a
	sbc	hl, de
	ld	iy, (ix + 6)
	jr	c, BB5_5
	ld.sis	hl, 319
	or	a, a
	sbc.sis	hl, bc
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (ix - 3)
	call	__ineg
	ld	(iy + 4), hl
	ld	(iy + 11), 0
BB5_5:
	cp	a, c
	jr	nc, BB5_7
	ld	(iy + 2), c
	ld	hl, (ix - 9)
	call	__ineg
	ld	(iy + 7), hl
	ld	(iy + 11), 0
	ld	hl, (ix - 6)
	jr	BB5_8
BB5_7:
	or	a, a
	sbc	hl, hl
	ld	l, a
BB5_8:
	ld	de, (ix - 6)
	add	hl, de
	ld	de, 240
	or	a, a
	sbc	hl, de
	jr	c, BB5_10
	ld	(iy + 10), 0
BB5_10:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9draw_ballPK4ball
__Z9draw_ballPK4ball:
	call	__frameset0
	ld	iy, (ix + 6)
	bit	0, (iy + 10)
	jr	z, BB6_2
	ld	hl, (iy)
	ld	de, 0
	push	de
	pop	bc
	ld	c, l
	ld	b, h
	push	de
	pop	hl
	ld	l, (iy + 2)
	ld	e, (iy + 3)
	push	de
	push	hl
	push	bc
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
BB6_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z5pausev
__Z5pausev:
BB7_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB7_1
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11draw_paddleth
__Z11draw_paddleth:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 40
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	hl, 2
	push	hl
	push	de
	ld	l, a
	push	hl
	push	bc
	call	_gfx_FillRectangle_NoClip
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9box_clearv
__Z9box_clearv:
	ld	hl, -6
	call	__frameset
	ld	bc, 16
	ld	iy, 0
BB9_1:
	ld	de, 3200
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB9_5
	ld	(ix - 3), iy
	lea	de, iy
	ld	iy, _boxes
	add	iy, de
	bit	0, (iy + 15)
	jr	nz, BB9_4
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, (ix - 3)
	ld	iy, _boxes
	add	iy, de
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	de, (iy + 6)
	ld	c, (iy + 9)
	push	bc
	push	de
	ld	e, a
	push	de
	push	hl
	call	_gfx_FillRectangle_NoClip
	ld	bc, 16
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB9_4:
	ld	iy, (ix - 3)
	add	iy, bc
	jr	BB9_1
BB9_5:
	ld	de, 60
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
BB9_6:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	jp	z, BB9_10
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, (ix - 3)
	ld	hl, _balls
	push	hl
	pop	iy
	add	iy, de
	bit	0, (iy + 10)
	jr	nz, BB9_9
	ld	de, (ix - 3)
	push	hl
	pop	iy
	add	iy, de
	ld	de, (iy)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	ld	b, d
	ld	(ix - 6), bc
	push	hl
	pop	de
	ld	e, (iy + 2)
	ld	l, (iy + 3)
	ld	bc, 10
	add	hl, bc
	push	hl
	push	de
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _balls
BB9_9:
	ld	de, (ix - 3)
	push	hl
	pop	iy
	add	iy, de
	ld	de, (iy)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	ld	b, d
	ld	(ix - 6), bc
	push	hl
	pop	de
	ld	e, (iy + 2)
	ld	l, (iy + 3)
	ld	bc, 10
	add	hl, bc
	push	hl
	push	de
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
	ld	de, 12
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 60
	jp	BB9_6
BB9_10:
	ld	hl, 5
	push	hl
	ld	hl, 320
	push	hl
	ld	hl, 218
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 100
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -31
	call	__frameset
	ld	hl, 3
	ld	(ix - 4), hl
	lea	hl, ix - 1
	ld	(ix - 10), hl
	call	_gfx_Begin
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_gfx_SwapDraw
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	__Z24generate_connected_levelv
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	xor	a, a
	ld	(ix - 7), a
BB10_1:
	call	_kb_Scan
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	1, a
	jr	z, BB10_5
	ld	hl, _paddle
	ld	iy, (hl)
	ld.sis	de, -4
	add.sis	iy, de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 11
	or	a, a
	sbc.sis	hl, de
	jr	nc, BB10_4
	ld.sis	hl, 10
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB10_4:
	ld	hl, _paddle
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
	ld	iy, -720866
BB10_5:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	2, a
	jr	z, BB10_9
	ld	hl, _paddle
	ld	iy, (hl)
	ld.sis	de, 4
	add.sis	iy, de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 270
	or	a, a
	sbc.sis	hl, de
	jr	c, BB10_8
	ld.sis	hl, 270
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB10_8:
	ld	hl, _paddle
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
	ld	iy, -720866
BB10_9:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, (ix - 7)
	and	a, 1
	bit	3, l
	jr	z, BB10_14
	bit	0, a
	jr	nz, BB10_14
	ld	hl, _paddle
	ld	hl, (hl)
	ld	de, 0
	push	de
	pop	bc
	push	bc
	pop	iy
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	de, 10
	add	iy, de
	ld	(ix - 7), iy
	ld	a, (_paddle+2)
	push	bc
	pop	hl
	ld	l, a
	ld	de, -10
	add	hl, de
	ld	(ix - 13), hl
	call	_random
	ld	bc, 1
	xor	a, a
	call	__land
	bit	0, l
	ld	hl, -1
	jr	z, BB10_13
	ld	hl, 1
BB10_13:
	ld	de, -2
	push	de
	push	hl
	ld	hl, (ix - 13)
	push	hl
	ld	hl, (ix - 7)
	push	hl
	call	__Z10spawn_balliiii
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	a, 1
	ld	(ix - 7), a
BB10_14:
	call	__Z9box_clearv
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, _paddle
	ld	hl, (hl)
	ld	a, (_paddle+2)
	ld	e, a
	push	de
	push	hl
	call	__Z11draw_paddleth
	pop	hl
	pop	hl
	ld	de, (ix - 4)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_55
	ld	a, (ix - 7)
	and	a, 1
	bit	0, a
	jr	nz, BB10_17
	ld	(ix - 4), de
	jp	BB10_54
BB10_17:
	ld	hl, 60
	push	hl
	pop	bc
	ld	iy, _balls
BB10_18:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB10_20
	lea	de, iy + 12
	ld	(ix - 13), de
	push	hl
	pop	de
	ld	bc, -12
	ld	(ix - 19), iy
	push	de
	pop	iy
	add	iy, bc
	lea	bc, iy
	ld	iy, (ix - 19)
	bit	0, (iy + 10)
	ld	iy, (ix - 13)
	jr	z, BB10_18
	jr	BB10_21
BB10_20:
	xor	a, a
	ld	(ix - 7), a
BB10_21:
	ld	iy, _balls
	ld	(ix - 16), hl
	or	a, a
	sbc	hl, hl
BB10_22:
	push	hl
	pop	de
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, de
	ld	(ix - 13), hl
	push	bc
	pop	hl
	ld	de, 60
	or	a, a
	sbc	hl, de
	jp	z, BB10_35
	push	bc
	pop	de
	add	iy, de
	bit	0, (iy + 10)
	push	bc
	pop	hl
	jp	z, BB10_34
	ld	de, (ix - 13)
	push	de
	ld	(ix - 19), hl
	call	__Z11update_ballP4ball
	pop	hl
	ld	hl, (ix - 13)
	push	hl
	call	__Z9draw_ballPK4ball
	pop	hl
	ld	de, (ix - 19)
	ld	hl, _balls
	push	hl
	pop	iy
	add	iy, de
	ld	(ix - 22), iy
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, (iy + 2)
	ld	a, (_paddle+2)
	push	hl
	pop	de
	push	hl
	pop	iy
	ld	e, a
	ld	(ix - 25), de
	ex	de, hl
	ld	de, -3
	add	hl, de
	lea	de, iy
	ld	iy, (ix - 22)
	ld	e, (iy + 3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	hl, (ix - 25)
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	push	bc
	pop	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 19)
	call	pe, __setflag
	jp	m, BB10_34
	ld	hl, (ix - 22)
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 19)
	call	pe, __setflag
	jp	m, BB10_34
	ld	hl, (ix - 13)
	ld	de, (hl)
	ld	hl, _paddle
	ld	bc, (hl)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	ld	hl, (ix - 19)
	jp	c, BB10_34
	ld	iy, 0
	lea	hl, iy
	ld	l, c
	ld	h, b
	lea	bc, iy
	ld	c, e
	ld	b, d
	ld	de, 40
	add	hl, de
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 19)
	jr	c, BB10_34
	ex	de, hl
	ld	iy, _balls
	lea	bc, iy
	add	iy, de
	ld	(ix - 13), iy
	ld	hl, (iy + 4)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB10_32
	call	_random
	ld	bc, 1
	xor	a, a
	call	__land
	bit	0, l
	push	bc
	pop	hl
	jr	z, BB10_31
	scf
	sbc	hl, hl
BB10_31:
	ld	iy, (ix - 13)
	ld	(iy + 4), hl
	ld	iy, _balls
	lea	bc, iy
BB10_32:
	ld	hl, (ix - 19)
	push	hl
	pop	de
	push	bc
	pop	iy
	add	iy, de
	bit	0, (iy + 11)
	jr	nz, BB10_34
	ex	de, hl
	ld	hl, _balls
	add	hl, de
	ex	de, hl
	lea	bc, iy
	push	de
	pop	iy
	ld	hl, (iy + 7)
	call	__ineg
	ld	(iy + 7), hl
	ld	hl, (ix - 19)
	push	bc
	pop	iy
	ld	(iy + 11), 1
BB10_34:
	ld	de, 12
	add	hl, de
	ld	iy, _balls
	jp	BB10_22
BB10_35:
	call	__Z8draw_boxv
	ld	iy, _boxes
BB10_36:
	lea	hl, iy
	ld	de, _boxes+3200
	or	a, a
	sbc	hl, de
	jp	z, BB10_51
	ld	(ix - 13), iy
	bit	0, (iy + 15)
	jr	nz, BB10_39
BB10_38:
	ld	iy, (ix - 13)
	lea	iy, iy + 16
	jr	BB10_36
BB10_39:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	hl, _balls
	ld	(ix - 19), hl
BB10_40:
	push	bc
	pop	hl
	ld	de, 60
	or	a, a
	sbc	hl, de
	jr	z, BB10_38
	push	bc
	pop	hl
	push	hl
	pop	de
	ld	(ix - 22), hl
	ld	iy, _balls
	add	iy, de
	bit	0, (iy + 10)
	jp	z, BB10_50
	ld	de, (ix - 22)
	ld	hl, _balls
	add	hl, de
	ld	hl, (hl)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	hl, (ix - 13)
	ld	bc, (hl)
	push	de
	pop	hl
	ld	(ix - 25), bc
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_50
	ld	iy, (ix - 13)
	ld	hl, (iy + 6)
	ld	bc, (ix - 25)
	add	hl, bc
	ld	(ix - 28), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_50
	ld	bc, (ix - 22)
	ld	hl, _balls
	push	hl
	pop	iy
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy + 2)
	ld	iy, (ix - 13)
	ld	bc, (iy + 3)
	ld	(ix - 31), hl
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_50
	ld	iy, (ix - 13)
	ld	hl, (iy + 9)
	add	hl, bc
	ld	bc, (ix - 31)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_50
	ld	bc, (ix - 22)
	ld	hl, _balls
	push	hl
	pop	iy
	add	iy, bc
	lea	hl, iy + 4
	ld	(ix - 31), hl
	ld	bc, (iy + 4)
	ex	de, hl
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	de, (ix - 25)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_49
	ld	hl, (ix - 28)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_49
	ld	iy, (ix - 19)
	lea	hl, iy + 7
	ld	(ix - 31), hl
	ld	de, (ix - 22)
	ld	iy, _balls
	add	iy, de
	ld	iy, (iy + 7)
BB10_49:
	lea	hl, iy
	call	__ineg
	ld	iy, (ix - 31)
	ld	(iy), hl
	ld	de, (ix - 22)
	ld	iy, _balls
	add	iy, de
	ld	(iy + 11), 0
	ld	iy, (ix - 13)
	ld	(iy + 15), 0
BB10_50:
	ld	iy, (ix - 19)
	lea	iy, iy + 12
	ld	(ix - 19), iy
	ld	de, 12
	ld	hl, (ix - 22)
	add	hl, de
	push	hl
	pop	bc
	jp	BB10_40
BB10_51:
	ld	hl, (ix - 16)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, -1
	jr	z, BB10_53
	ld	de, 0
BB10_53:
	ld	hl, (ix - 4)
	add	hl, de
	ld	(ix - 4), hl
BB10_54:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextTransparentColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (ix - 4)
	push	hl
	ld	hl, _.str.1
	push	hl
	ld	hl, (ix - 10)
	push	hl
	call	_boot_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 5
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, (ix - 10)
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextTransparentColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	call	_gfx_SwapDraw
	jp	BB10_1
BB10_55:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextTransparentColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 120
	push	hl
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextTransparentColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	call	_gfx_SwapDraw
	call	__Z5pausev
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_paddle
_paddle:
	dw	160
	db	220

	section	.bss,"aw",@nobits
	public	_balls
_balls:
	rb	60

	section	.bss,"aw",@nobits
	public	_boxes
_boxes:
	rb	3200

	section	.rodata,"a",@progbits
	private	___const._Z24generate_connected_levelv.dirY
___const._Z24generate_connected_levelv.dirY:
	dl	0
	dl	0
	dl	1
	dl	16777215
	dl	2
	dl	16777214

	section	.rodata,"a",@progbits
	private	___const._Z24generate_connected_levelv.dirX
___const._Z24generate_connected_levelv.dirX:
	dl	1
	dl	16777215
	dl	0
	dl	0
	dl	2
	dl	16777214

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"Game Over", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"%d", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Lives: ", 0

	section	.rodata,"a",@progbits
	private	_switch.table._Z12random_colorv
_switch.table._Z12random_colorv:
	dw	7
	dw	20
	dw	79
	dw	255

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	_random
	extern	_gfx_SetTextTransparentColor
	extern	__frameset
	extern	_srand
	extern	_boot_sprintf
	extern	_gfx_SetTextBGColor
	extern	__Unwind_SjLj_Register
	extern	_gfx_FillRectangle_NoClip
	extern	_kb_Scan
	extern	_gfx_Begin
	extern	_gfx_SetTextFGColor
	extern	_gfx_SwapDraw
	extern	__ishl
	extern	_gfx_SetDraw
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	_gfx_FillRectangle
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	__land
	extern	__ineg
	extern	_gfx_PrintStringXY
	extern	_gfx_FillCircle
	extern	_os_GetCSC
	extern	_gfx_End
	extern	__frameset0
